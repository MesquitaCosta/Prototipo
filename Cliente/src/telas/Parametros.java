/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import aplicacao.Mensagem;
import aplicacao.PainelPacotes;
import aplicacao.Pacote;
import aplicacao.PreencherPainel;
import java.awt.DisplayMode;
import java.awt.GraphicsEnvironment;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import service.ClienteService;

/**
 *
 * @author LORD
 */
public class Parametros extends javax.swing.JPanel implements PreencherPainel {

    /**
     * Creates new form Parametros
     */
    private PainelPacotes aba;
    private Pacote pacote;
    private Mensagem mensagem;
    private ClienteService service;
    
    public Parametros(PainelPacotes aba, ClienteService service, Mensagem mensagem) {
        initComponents();

        this.aba = aba;
        this.mensagem = mensagem;
        this.service = service;

        exibirCamposEmissor();

        try {
            if (mensagem.getPacotes().get(retornaUltimoPacote(mensagem)).getIpDestino().equals(InetAddress.getLocalHost().getHostAddress())) {
                exibirCamposReceptor();
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(Parametros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        pnlParametros = new javax.swing.JPanel();
        lblQuantidadeDados = new javax.swing.JLabel();
        txtQuantidadeDados = new javax.swing.JTextField();
        sliderTamanhoJanela = new javax.swing.JSlider();
        lblTamanhoJanela = new javax.swing.JLabel();
        txtTamanhoJanela = new javax.swing.JFormattedTextField();
        sliderTamanhoMensagem = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        txtMSS = new javax.swing.JTextField();
        sliderMSS = new javax.swing.JSlider();
        btnOK = new javax.swing.JButton();
        pnlMensagem = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensagem = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 51, 0));

        pnlParametros.setBackground(new java.awt.Color(0, 102, 0));
        pnlParametros.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parâmetros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        lblQuantidadeDados.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantidadeDados.setText("Quantidade de Dados (Bytes)");
        lblQuantidadeDados.setToolTipText("Deslize a barra para aumentar ou diminuir o tamanho");

        txtQuantidadeDados.setEditable(false);
        txtQuantidadeDados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtQuantidadeDados.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderTamanhoMensagem, org.jdesktop.beansbinding.ELProperty.create("${value}"), txtQuantidadeDados, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sliderTamanhoJanela.setBackground(new java.awt.Color(153, 255, 153));
        sliderTamanhoJanela.setMajorTickSpacing(1);
        sliderTamanhoJanela.setMaximum(15);
        sliderTamanhoJanela.setMinimum(1);
        sliderTamanhoJanela.setPaintTicks(true);
        sliderTamanhoJanela.setToolTipText("");
        sliderTamanhoJanela.setValue(8);
        sliderTamanhoJanela.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblTamanhoJanela.setForeground(new java.awt.Color(255, 255, 255));
        lblTamanhoJanela.setText("Janela Recepção (MMS)");
        lblTamanhoJanela.setToolTipText("Deslize a barra para aumentar ou diminuir o tamanho");

        txtTamanhoJanela.setEditable(false);
        txtTamanhoJanela.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTamanhoJanela.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderTamanhoJanela, org.jdesktop.beansbinding.ELProperty.create("${value}"), txtTamanhoJanela, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        sliderTamanhoMensagem.setBackground(new java.awt.Color(153, 255, 153));
        sliderTamanhoMensagem.setMajorTickSpacing(1460);
        sliderTamanhoMensagem.setMaximum(29200);
        sliderTamanhoMensagem.setMinimum(1460);
        sliderTamanhoMensagem.setPaintTicks(true);
        sliderTamanhoMensagem.setToolTipText("");
        sliderTamanhoMensagem.setValue(15330);
        sliderTamanhoMensagem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tamanho Segmento (MSS)");
        jLabel1.setToolTipText("Maximum Segment Size");

        txtMSS.setEditable(false);
        txtMSS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtMSS.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderMSS, org.jdesktop.beansbinding.ELProperty.create("${value}"), txtMSS, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sliderMSS.setBackground(new java.awt.Color(153, 255, 153));
        sliderMSS.setMajorTickSpacing(536);
        sliderMSS.setMaximum(2680);
        sliderMSS.setMinimum(536);
        sliderMSS.setPaintTicks(true);

        javax.swing.GroupLayout pnlParametrosLayout = new javax.swing.GroupLayout(pnlParametros);
        pnlParametros.setLayout(pnlParametrosLayout);
        pnlParametrosLayout.setHorizontalGroup(
            pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlParametrosLayout.createSequentialGroup()
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuantidadeDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlParametrosLayout.createSequentialGroup()
                        .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlParametrosLayout.createSequentialGroup()
                                .addComponent(lblTamanhoJanela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22))
                            .addGroup(pnlParametrosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(6, 6, 6)))
                .addGap(18, 18, 18)
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtMSS, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(txtQuantidadeDados))
                .addGap(52, 52, 52))
            .addGroup(pnlParametrosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderTamanhoMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sliderTamanhoJanela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
            .addGroup(pnlParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sliderMSS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, pnlParametrosLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(txtTamanhoJanela)
                .addGap(52, 52, 52))
        );
        pnlParametrosLayout.setVerticalGroup(
            pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlParametrosLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQuantidadeDados)
                    .addGroup(pnlParametrosLayout.createSequentialGroup()
                        .addComponent(lblQuantidadeDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderTamanhoMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23)
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(pnlParametrosLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblTamanhoJanela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtTamanhoJanela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderTamanhoJanela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(pnlParametrosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtMSS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderMSS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        btnOK.setBackground(new java.awt.Color(153, 255, 153));
        btnOK.setText("OK");
        btnOK.setPreferredSize(new java.awt.Dimension(120, 45));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        pnlMensagem.setBackground(new java.awt.Color(0, 102, 0));
        pnlMensagem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mensagem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtMensagem.setColumns(20);
        txtMensagem.setLineWrap(true);
        txtMensagem.setRows(5);
        txtMensagem.setWrapStyleWord(true);
        txtMensagem.setMaximumSize(new java.awt.Dimension(200, 305));
        jScrollPane1.setViewportView(txtMensagem);

        javax.swing.GroupLayout pnlMensagemLayout = new javax.swing.GroupLayout(pnlMensagem);
        pnlMensagem.setLayout(pnlMensagemLayout);
        pnlMensagemLayout.setHorizontalGroup(
            pnlMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMensagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMensagemLayout.setVerticalGroup(
            pnlMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMensagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(pnlMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnlParametros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlParametros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        setarParametros();

        preenche(aba);
    }//GEN-LAST:event_btnOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuantidadeDados;
    private javax.swing.JLabel lblTamanhoJanela;
    private javax.swing.JPanel pnlMensagem;
    private javax.swing.JPanel pnlParametros;
    private javax.swing.JSlider sliderMSS;
    private javax.swing.JSlider sliderTamanhoJanela;
    private javax.swing.JSlider sliderTamanhoMensagem;
    private javax.swing.JTextField txtMSS;
    private javax.swing.JTextArea txtMensagem;
    private javax.swing.JTextField txtQuantidadeDados;
    private javax.swing.JFormattedTextField txtTamanhoJanela;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void fecharParametros() {

        txtTamanhoJanela.setEnabled(false);
        sliderTamanhoJanela.setEnabled(false);
        lblTamanhoJanela.setEnabled(false);
        lblQuantidadeDados.setEnabled(false);
        txtQuantidadeDados.setEnabled(false);
        sliderTamanhoMensagem.setEnabled(false);
        txtTamanhoJanela.setEnabled(false);
        sliderTamanhoJanela.setEnabled(false);
        lblTamanhoJanela.setEnabled(false);
        jScrollPane1.setEnabled(false);
        txtMensagem.setEnabled(false);
        sliderMSS.setEnabled(false);
        aba.scroll.setVisible(true);
        btnOK.setVisible(false);
    }

    private int retornaUltimoPacote(Mensagem mensagem) {

        return (mensagem.getPacotes().size() - 1);
    }

    public Mensagem setarParametros() {

        try {
            if (mensagem.getIpDestino().equals(InetAddress.getLocalHost().getHostAddress())) {

                mensagem.getPacotes().get(retornaUltimoPacote(mensagem)).setTamanhoJanela(Short.valueOf(txtTamanhoJanela.getText()));
                mensagem.setMssReceptor(Integer.valueOf(txtMSS.getText()));

            }else{
                mensagem.setMssEmissor(Integer.valueOf(txtMSS.getText()));
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(Parametros.class.getName()).log(Level.SEVERE, null, ex);
        }

        mensagem.setTamanhoMensagem(Integer.valueOf(txtQuantidadeDados.getText()));       
        mensagem.setMensagem(txtMensagem.getText());
        
        fecharParametros();
        return mensagem;
    }

    public void preenche(PainelPacotes aba) {
        
        try {
            if (mensagem.getIpOrigem().equals(InetAddress.getLocalHost().getHostAddress())) {

                aba.painelInterno.getSYN().setSelected(true);
                aba.painelInterno.setTxtOptionsX(String.valueOf(mensagem.getMssEmissor()));
                
                
            } else {
                aba.paineis.get(aba.paineis.size()-1).setVisible(true);
                aba.painelInterno.setTxtJanelaRecepcaoX(String.valueOf(mensagem.getPacotes().get(retornaUltimoPacote(mensagem)).getTamanhoJanela()));
                aba.painelInterno.getSYN().setSelected(true);
                aba.painelInterno.getACK().setSelected(true);
                aba.painelInterno.setTxtOptionsX(String.valueOf(mensagem.getMssReceptor()));              
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(Parametros.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.mensagem.setAction(Mensagem.Action.ENVIAR);
        this.service.enviar(mensagem);
    }

    private void exibirCamposEmissor() {

        txtTamanhoJanela.setVisible(false);
        sliderTamanhoJanela.setVisible(false);
        lblTamanhoJanela.setVisible(false);
    }

    private void exibirCamposReceptor() {
        lblQuantidadeDados.setVisible(false);
        txtQuantidadeDados.setVisible(false);
        sliderTamanhoMensagem.setVisible(false);
        txtTamanhoJanela.setVisible(true);
        sliderTamanhoJanela.setVisible(true);
        lblTamanhoJanela.setVisible(true);
        jScrollPane1.setVisible(false);
        txtMensagem.setVisible(false);
        pnlMensagem.setVisible(false);
    }
}
